// Code generated by goal-cli. DO NOT EDIT.
// versions:
// 	goal-cli v0.5.24
// 	go       go1.23.2
//
// updated_at: 2024-10-09 19:07:27
// source: pro/user.proto
// 
package user

import (
	"github.com/goal-web/contracts"
	user "github.com/goal-web/goal/app/requests/user"
	"github.com/goal-web/goal/app/response"
	svc "github.com/goal-web/goal/app/services/user"
	"github.com/goal-web/validation"
)

func AuthServiceRouter(router contracts.HttpRouter) {
	routeGroup := router.Group("/auth")
	routeGroup.Post("/LoginByWxAppCode", AuthServiceLoginByWxAppCode, "guest")
	routeGroup.Post("/LoginByWxAppInfo", AuthServiceLoginByWxAppInfo, "guest")
}
func AuthServiceLoginByWxAppCode(request contracts.HttpRequest) any {
	var req user.LoginByWxCodeReq

	if err := request.Parse(&req); err != nil {
		return response.ParseReqErr(err)
	}

	if err := validation.Struct(req); err != nil {
		return response.InvalidReq(err)
	}

	resp, err := svc.AuthServiceLoginByWxAppCode(&req)
	if err != nil {
		return response.BizErr(err)
	}

	return response.Success(resp)
}
func AuthServiceLoginByWxAppInfo(request contracts.HttpRequest) any {
	var req user.LoginByWxInfoReq

	if err := request.Parse(&req); err != nil {
		return response.ParseReqErr(err)
	}

	if err := validation.Struct(req); err != nil {
		return response.InvalidReq(err)
	}

	resp, err := svc.AuthServiceLoginByWxAppInfo(&req)
	if err != nil {
		return response.BizErr(err)
	}

	return response.Success(resp)
}
